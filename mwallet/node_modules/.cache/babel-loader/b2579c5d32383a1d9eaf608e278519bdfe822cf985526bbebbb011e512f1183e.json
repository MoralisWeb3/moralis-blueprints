{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\nimport useDelayReset from \"./hooks/useDelayReset\";\nimport useLock from \"./hooks/useLock\";\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\nimport Selector from \"./Selector\";\nimport SelectTrigger from \"./SelectTrigger\";\nimport TransBtn from \"./TransBtn\";\nimport { getSeparatedContent } from \"./utils/valueUtil\";\nimport { useAllowClear } from \"./hooks/useAllowClear\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle, _classNames2;\n  var id = props.id,\n    prefixCls = props.prefixCls,\n    className = props.className,\n    showSearch = props.showSearch,\n    tagRender = props.tagRender,\n    direction = props.direction,\n    omitDomProps = props.omitDomProps,\n    displayValues = props.displayValues,\n    onDisplayValuesChange = props.onDisplayValuesChange,\n    emptyOptions = props.emptyOptions,\n    _props$notFoundConten = props.notFoundContent,\n    notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n    onClear = props.onClear,\n    mode = props.mode,\n    disabled = props.disabled,\n    loading = props.loading,\n    getInputElement = props.getInputElement,\n    getRawInputElement = props.getRawInputElement,\n    open = props.open,\n    defaultOpen = props.defaultOpen,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    activeValue = props.activeValue,\n    onActiveValueChange = props.onActiveValueChange,\n    activeDescendantId = props.activeDescendantId,\n    searchValue = props.searchValue,\n    autoClearSearchValue = props.autoClearSearchValue,\n    onSearch = props.onSearch,\n    onSearchSplit = props.onSearchSplit,\n    tokenSeparators = props.tokenSeparators,\n    allowClear = props.allowClear,\n    suffixIcon = props.suffixIcon,\n    clearIcon = props.clearIcon,\n    OptionList = props.OptionList,\n    animation = props.animation,\n    transitionName = props.transitionName,\n    dropdownStyle = props.dropdownStyle,\n    dropdownClassName = props.dropdownClassName,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    dropdownRender = props.dropdownRender,\n    dropdownAlign = props.dropdownAlign,\n    placement = props.placement,\n    builtinPlacements = props.builtinPlacements,\n    getPopupContainer = props.getPopupContainer,\n    _props$showAction = props.showAction,\n    showAction = _props$showAction === void 0 ? [] : _props$showAction,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onKeyUp = props.onKeyUp,\n    onKeyDown = props.onKeyDown,\n    onMouseDown = props.onMouseDown,\n    restProps = _objectWithoutProperties(props, _excluded);\n\n  // ============================== MISC ==============================\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n  var domProps = _objectSpread({}, restProps);\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  });\n\n  // ============================= Mobile =============================\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mobile = _React$useState2[0],\n    setMobile = _React$useState2[1];\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []);\n\n  // ============================== Refs ==============================\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n\n  /** Used for component focused management */\n  var _useDelayReset = useDelayReset(),\n    _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n    mockFocused = _useDelayReset2[0],\n    setMockFocused = _useDelayReset2[1],\n    cancelSetMockFocused = _useDelayReset2[2];\n\n  // =========================== Imperative ===========================\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  });\n\n  // ========================== Search Value ==========================\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]);\n\n  // ========================== Custom Input ==========================\n  // Only works in `combobox`\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null;\n\n  // Used for customize replacement for `rc-cascader`\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 ? void 0 : (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref);\n\n  // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rendered = _React$useState4[0],\n    setRendered = _React$useState4[1];\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n  var _useMergedState = useMergedState(false, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    innerOpen = _useMergedState2[0],\n    setInnerOpen = _useMergedState2[1];\n  var mergedOpen = rendered ? innerOpen : false;\n\n  // Not trigger `open` in `combobox` when `notFoundContent` is empty\n  var emptyListContent = !notFoundContent && emptyOptions;\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]);\n\n  // ============================= Search =============================\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 ? void 0 : onActiveValueChange(null);\n\n    // Check if match the `tokenSeparators`\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n\n    // Ignore combobox since it's not split-able\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 ? void 0 : onSearchSplit(patchLabels);\n\n      // Should close when paste finish\n      onToggleOpen(false);\n\n      // Tell Selector that break next actions\n      ret = false;\n    }\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n    return ret;\n  };\n\n  // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  };\n\n  // Close will clean up single mode search text\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]);\n\n  // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n    if (disabled) {\n      setMockFocused(false);\n    }\n  }, [disabled]);\n\n  // ============================ Keyboard ============================\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n  var _useLock = useLock(),\n    _useLock2 = _slicedToArray(_useLock, 2),\n    getClearLock = _useLock2[0],\n    setClearLock = _useLock2[1];\n\n  // KeyDown\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      }\n\n      // We only manage open state here, close logic should handle by list component\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n    setClearLock(!!mergedSearchValue);\n\n    // Remove value by `backspace`\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n      var removedDisplayValue = null;\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current2;\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown.apply(void 0, [event].concat(rest));\n  };\n\n  // KeyUp\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current3;\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp.apply(void 0, [event].concat(rest));\n  };\n\n  // ============================ Selector ============================\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  };\n\n  // ========================== Focus / Blur ==========================\n  /** Record real focus status */\n  var focusRef = React.useRef(false);\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      }\n\n      // `showAction` should handle `focus` if set\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n    focusRef.current = true;\n  };\n  var onContainerBlur = function onContainerBlur() {\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      onToggleOpen(false);\n    });\n    if (disabled) {\n      return;\n    }\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  };\n\n  // Give focus back of Select\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement();\n\n    // We should give focus back to selector if clicked item is not focusable\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n        cancelSetMockFocused();\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n    onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown.apply(void 0, [event].concat(restArgs));\n  };\n\n  // ============================ Dropdown ============================\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    containerWidth = _React$useState6[0],\n    setContainerWidth = _React$useState6[1];\n  var _React$useState7 = React.useState({}),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    forceUpdate = _React$useState8[1];\n  // We need force update here since popup dom is render async\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n  useLayoutEffect(function () {\n    if (triggerOpen) {\n      var _containerRef$current;\n      // Guaranteed width accuracy \n      var newWidth = Math.ceil((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect().width);\n      if (containerWidth !== newWidth && !Number.isNaN(newWidth)) {\n        setContainerWidth(newWidth);\n      }\n    }\n  }, [triggerOpen]);\n\n  // Used for raw custom input trigger\n  var onTriggerVisibleChange;\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  }\n\n  // Close when click on non-select element\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement);\n\n  // ============================ Context =============================\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]);\n\n  // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n\n  // ============================= Arrow ==============================\n  var showSuffixIcon = !!suffixIcon || loading;\n  var arrowNode;\n  if (showSuffixIcon) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: suffixIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  }\n\n  // ============================= Clear ==============================\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n    onClear === null || onClear === void 0 ? void 0 : onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 ? void 0 : _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\n    mergedAllowClear = _useAllowClear.allowClear,\n    clearNode = _useAllowClear.clearIcon;\n\n  // =========================== OptionList ===========================\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  });\n\n  // ============================= Select =============================\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n\n  // >>> Selector\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    containerWidth: containerWidth,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  })));\n\n  // >>> Render\n  var renderNode;\n\n  // Render raw\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(displayValues.map(function (_ref) {\n      var label = _ref.label,\n        value = _ref.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, mergedAllowClear && clearNode);\n  }\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n});\n\n// Set display name for dev\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\nexport default BaseSelect;","map":{"version":3,"names":["_typeof","_extends","_defineProperty","_toConsumableArray","_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","classNames","useLayoutEffect","useMergedState","isMobile","KeyCode","useComposeRef","React","BaseSelectContext","useDelayReset","useLock","useSelectTriggerControl","Selector","SelectTrigger","TransBtn","getSeparatedContent","useAllowClear","DEFAULT_OMIT_PROPS","isMultiple","mode","BaseSelect","forwardRef","props","ref","_customizeRawInputEle","_classNames2","id","prefixCls","className","showSearch","tagRender","direction","omitDomProps","displayValues","onDisplayValuesChange","emptyOptions","_props$notFoundConten","notFoundContent","onClear","disabled","loading","getInputElement","getRawInputElement","open","defaultOpen","onDropdownVisibleChange","activeValue","onActiveValueChange","activeDescendantId","searchValue","autoClearSearchValue","onSearch","onSearchSplit","tokenSeparators","allowClear","suffixIcon","clearIcon","OptionList","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","builtinPlacements","getPopupContainer","_props$showAction","showAction","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","restProps","multiple","mergedShowSearch","undefined","domProps","forEach","propName","_React$useState","useState","_React$useState2","mobile","setMobile","useEffect","containerRef","useRef","selectorDomRef","triggerRef","selectorRef","listRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","useImperativeHandle","_selectorRef$current","_selectorRef$current2","focus","current","blur","scrollTo","arg","_listRef$current","mergedSearchValue","useMemo","_displayValues$","val","value","String","customizeInputElement","customizeRawInputElement","customizeRawInputRef","_React$useState3","_React$useState4","rendered","setRendered","_useMergedState","defaultValue","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","useCallback","newOpen","nextOpen","tokenWithEnter","some","tokenSeparator","includes","onInternalSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","source","onInternalSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","length","cloneDisplayValues","removedDisplayValue","i","splice","type","values","_len","arguments","rest","Array","_key","_listRef$current2","apply","concat","onInternalKeyUp","_len2","_key2","_listRef$current3","onSelectorRemove","newValues","filter","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","onInternalMouseDown","_triggerRef$current","target","popupElement","getPopupElement","contains","setTimeout","index","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_React$useState5","_React$useState6","containerWidth","setContainerWidth","_React$useState7","_React$useState8","forceUpdate","onPopupMouseEnter","_containerRef$current","newWidth","Math","ceil","getBoundingClientRect","width","Number","isNaN","onTriggerVisibleChange","_triggerRef$current2","baseSelectContext","toggleOpen","showSuffixIcon","arrowNode","createElement","customizeIcon","customizeIconProps","focused","onClearMouseDown","_selectorRef$current4","_useAllowClear","mergedAllowClear","clearNode","optionList","mergedClassName","selectorNode","visible","empty","getTriggerDOMNode","onPopupVisibleChange","cloneElement","domRef","inputElement","onSearchSubmit","onRemove","renderNode","style","height","position","overflow","opacity","map","_ref","label","join","Provider","process","env","NODE_ENV","displayName"],"sources":["/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/node_modules/rc-select/es/BaseSelect.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\nimport useDelayReset from \"./hooks/useDelayReset\";\nimport useLock from \"./hooks/useLock\";\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\nimport Selector from \"./Selector\";\nimport SelectTrigger from \"./SelectTrigger\";\nimport TransBtn from \"./TransBtn\";\nimport { getSeparatedContent } from \"./utils/valueUtil\";\nimport { useAllowClear } from \"./hooks/useAllowClear\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle, _classNames2;\n  var id = props.id,\n    prefixCls = props.prefixCls,\n    className = props.className,\n    showSearch = props.showSearch,\n    tagRender = props.tagRender,\n    direction = props.direction,\n    omitDomProps = props.omitDomProps,\n    displayValues = props.displayValues,\n    onDisplayValuesChange = props.onDisplayValuesChange,\n    emptyOptions = props.emptyOptions,\n    _props$notFoundConten = props.notFoundContent,\n    notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n    onClear = props.onClear,\n    mode = props.mode,\n    disabled = props.disabled,\n    loading = props.loading,\n    getInputElement = props.getInputElement,\n    getRawInputElement = props.getRawInputElement,\n    open = props.open,\n    defaultOpen = props.defaultOpen,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    activeValue = props.activeValue,\n    onActiveValueChange = props.onActiveValueChange,\n    activeDescendantId = props.activeDescendantId,\n    searchValue = props.searchValue,\n    autoClearSearchValue = props.autoClearSearchValue,\n    onSearch = props.onSearch,\n    onSearchSplit = props.onSearchSplit,\n    tokenSeparators = props.tokenSeparators,\n    allowClear = props.allowClear,\n    suffixIcon = props.suffixIcon,\n    clearIcon = props.clearIcon,\n    OptionList = props.OptionList,\n    animation = props.animation,\n    transitionName = props.transitionName,\n    dropdownStyle = props.dropdownStyle,\n    dropdownClassName = props.dropdownClassName,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    dropdownRender = props.dropdownRender,\n    dropdownAlign = props.dropdownAlign,\n    placement = props.placement,\n    builtinPlacements = props.builtinPlacements,\n    getPopupContainer = props.getPopupContainer,\n    _props$showAction = props.showAction,\n    showAction = _props$showAction === void 0 ? [] : _props$showAction,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onKeyUp = props.onKeyUp,\n    onKeyDown = props.onKeyDown,\n    onMouseDown = props.onMouseDown,\n    restProps = _objectWithoutProperties(props, _excluded);\n\n  // ============================== MISC ==============================\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n  var domProps = _objectSpread({}, restProps);\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  });\n\n  // ============================= Mobile =============================\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mobile = _React$useState2[0],\n    setMobile = _React$useState2[1];\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []);\n\n  // ============================== Refs ==============================\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n\n  /** Used for component focused management */\n  var _useDelayReset = useDelayReset(),\n    _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n    mockFocused = _useDelayReset2[0],\n    setMockFocused = _useDelayReset2[1],\n    cancelSetMockFocused = _useDelayReset2[2];\n\n  // =========================== Imperative ===========================\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  });\n\n  // ========================== Search Value ==========================\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]);\n\n  // ========================== Custom Input ==========================\n  // Only works in `combobox`\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null;\n\n  // Used for customize replacement for `rc-cascader`\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 ? void 0 : (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref);\n\n  // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rendered = _React$useState4[0],\n    setRendered = _React$useState4[1];\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n  var _useMergedState = useMergedState(false, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    innerOpen = _useMergedState2[0],\n    setInnerOpen = _useMergedState2[1];\n  var mergedOpen = rendered ? innerOpen : false;\n\n  // Not trigger `open` in `combobox` when `notFoundContent` is empty\n  var emptyListContent = !notFoundContent && emptyOptions;\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]);\n\n  // ============================= Search =============================\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 ? void 0 : onActiveValueChange(null);\n\n    // Check if match the `tokenSeparators`\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n\n    // Ignore combobox since it's not split-able\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 ? void 0 : onSearchSplit(patchLabels);\n\n      // Should close when paste finish\n      onToggleOpen(false);\n\n      // Tell Selector that break next actions\n      ret = false;\n    }\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n    return ret;\n  };\n\n  // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  };\n\n  // Close will clean up single mode search text\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]);\n\n  // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n    if (disabled) {\n      setMockFocused(false);\n    }\n  }, [disabled]);\n\n  // ============================ Keyboard ============================\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n  var _useLock = useLock(),\n    _useLock2 = _slicedToArray(_useLock, 2),\n    getClearLock = _useLock2[0],\n    setClearLock = _useLock2[1];\n\n  // KeyDown\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      }\n\n      // We only manage open state here, close logic should handle by list component\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n    setClearLock(!!mergedSearchValue);\n\n    // Remove value by `backspace`\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n      var removedDisplayValue = null;\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current2;\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown.apply(void 0, [event].concat(rest));\n  };\n\n  // KeyUp\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current3;\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp.apply(void 0, [event].concat(rest));\n  };\n\n  // ============================ Selector ============================\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  };\n\n  // ========================== Focus / Blur ==========================\n  /** Record real focus status */\n  var focusRef = React.useRef(false);\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      }\n\n      // `showAction` should handle `focus` if set\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n    focusRef.current = true;\n  };\n  var onContainerBlur = function onContainerBlur() {\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      onToggleOpen(false);\n    });\n    if (disabled) {\n      return;\n    }\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  };\n\n  // Give focus back of Select\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement();\n\n    // We should give focus back to selector if clicked item is not focusable\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n        cancelSetMockFocused();\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n    onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown.apply(void 0, [event].concat(restArgs));\n  };\n\n  // ============================ Dropdown ============================\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    containerWidth = _React$useState6[0],\n    setContainerWidth = _React$useState6[1];\n  var _React$useState7 = React.useState({}),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    forceUpdate = _React$useState8[1];\n  // We need force update here since popup dom is render async\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n  useLayoutEffect(function () {\n    if (triggerOpen) {\n      var _containerRef$current;\n      // Guaranteed width accuracy \n      var newWidth = Math.ceil((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect().width);\n      if (containerWidth !== newWidth && !Number.isNaN(newWidth)) {\n        setContainerWidth(newWidth);\n      }\n    }\n  }, [triggerOpen]);\n\n  // Used for raw custom input trigger\n  var onTriggerVisibleChange;\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  }\n\n  // Close when click on non-select element\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement);\n\n  // ============================ Context =============================\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]);\n\n  // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n\n  // ============================= Arrow ==============================\n  var showSuffixIcon = !!suffixIcon || loading;\n  var arrowNode;\n  if (showSuffixIcon) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: suffixIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  }\n\n  // ============================= Clear ==============================\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n    onClear === null || onClear === void 0 ? void 0 : onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 ? void 0 : _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\n    mergedAllowClear = _useAllowClear.allowClear,\n    clearNode = _useAllowClear.clearIcon;\n\n  // =========================== OptionList ===========================\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  });\n\n  // ============================= Select =============================\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n\n  // >>> Selector\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    containerWidth: containerWidth,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  })));\n\n  // >>> Render\n  var renderNode;\n\n  // Render raw\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(displayValues.map(function (_ref) {\n      var label = _ref.label,\n        value = _ref.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, mergedAllowClear && clearNode);\n  }\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n});\n\n// Set display name for dev\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\nexport default BaseSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}