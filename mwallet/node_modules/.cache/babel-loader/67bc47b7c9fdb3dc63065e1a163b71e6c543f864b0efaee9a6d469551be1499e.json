{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport { fillRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport ColGroup from \"../ColGroup\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n  var className = props.className,\n    noData = props.noData,\n    columns = props.columns,\n    flattenColumns = props.flattenColumns,\n    colWidths = props.colWidths,\n    columCount = props.columCount,\n    stickyOffsets = props.stickyOffsets,\n    direction = props.direction,\n    fixHeader = props.fixHeader,\n    stickyTopOffset = props.stickyTopOffset,\n    stickyBottomOffset = props.stickyBottomOffset,\n    stickyClassName = props.stickyClassName,\n    onScroll = props.onScroll,\n    maxContentScroll = props.maxContentScroll,\n    children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _useContext = useContext(TableContext, ['prefixCls', 'scrollbarSize', 'isSticky']),\n    prefixCls = _useContext.prefixCls,\n    scrollbarSize = _useContext.scrollbarSize,\n    isSticky = _useContext.isSticky;\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize;\n\n  // Pass wheel to scroll event\n  var scrollRef = React.useRef(null);\n  var setScrollRef = React.useCallback(function (element) {\n    fillRef(ref, element);\n    fillRef(scrollRef, element);\n  }, []);\n  React.useEffect(function () {\n    var _scrollRef$current;\n    function onWheel(e) {\n      var _ref = e,\n        currentTarget = _ref.currentTarget,\n        deltaX = _ref.deltaX;\n      if (deltaX) {\n        onScroll({\n          currentTarget: currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    }\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.addEventListener('wheel', onWheel);\n    return function () {\n      var _scrollRef$current2;\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.removeEventListener('wheel', onWheel);\n    };\n  }, []);\n\n  // Check if all flattenColumns has width\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\n    return flattenColumns.every(function (column) {\n      return column.width >= 0;\n    });\n  }, [flattenColumns]);\n\n  // Add scrollbar column\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    scrollbar: true,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [combinationScrollBarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [combinationScrollBarSize, flattenColumns]);\n\n  // Calculate the sticky offsets\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n      left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]),\n      isSticky: isSticky\n    });\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _objectSpread({\n      overflow: 'hidden'\n    }, isSticky ? {\n      top: stickyTopOffset,\n      bottom: stickyBottomOffset\n    } : {}),\n    ref: setScrollRef,\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      tableLayout: 'fixed',\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\n    }\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), children(_objectSpread(_objectSpread({}, restProps), {}, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  }))));\n});\nFixedHolder.displayName = 'FixedHolder';\n\n/** Return a table in div as fixed element which contains sticky info */\n// export default responseImmutable(FixedHolder);\nexport default /*#__PURE__*/React.memo(FixedHolder);","map":{"version":3,"names":["_defineProperty","_objectSpread","_toConsumableArray","_objectWithoutProperties","_excluded","useContext","classNames","fillRef","React","useMemo","ColGroup","TableContext","devRenderTimes","useColumnWidth","colWidths","columCount","cloneColumns","i","val","undefined","join","FixedHolder","forwardRef","props","ref","process","env","NODE_ENV","className","noData","columns","flattenColumns","stickyOffsets","direction","fixHeader","stickyTopOffset","stickyBottomOffset","stickyClassName","onScroll","maxContentScroll","children","restProps","_useContext","prefixCls","scrollbarSize","isSticky","combinationScrollBarSize","scrollRef","useRef","setScrollRef","useCallback","element","useEffect","_scrollRef$current","onWheel","e","_ref","currentTarget","deltaX","scrollLeft","preventDefault","current","addEventListener","_scrollRef$current2","removeEventListener","allFlattenColumnsWithWidth","every","column","width","lastColumn","length","ScrollBarColumn","fixed","scrollbar","onHeaderCell","concat","columnsWithScrollbar","flattenColumnsWithScrollbar","headerStickyOffsets","right","left","map","mergedColumnWidth","createElement","style","overflow","top","bottom","tableLayout","visibility","displayName","memo"],"sources":["/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/node_modules/rc-table/es/FixedHolder/index.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport { fillRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport ColGroup from \"../ColGroup\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n  var className = props.className,\n    noData = props.noData,\n    columns = props.columns,\n    flattenColumns = props.flattenColumns,\n    colWidths = props.colWidths,\n    columCount = props.columCount,\n    stickyOffsets = props.stickyOffsets,\n    direction = props.direction,\n    fixHeader = props.fixHeader,\n    stickyTopOffset = props.stickyTopOffset,\n    stickyBottomOffset = props.stickyBottomOffset,\n    stickyClassName = props.stickyClassName,\n    onScroll = props.onScroll,\n    maxContentScroll = props.maxContentScroll,\n    children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _useContext = useContext(TableContext, ['prefixCls', 'scrollbarSize', 'isSticky']),\n    prefixCls = _useContext.prefixCls,\n    scrollbarSize = _useContext.scrollbarSize,\n    isSticky = _useContext.isSticky;\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize;\n\n  // Pass wheel to scroll event\n  var scrollRef = React.useRef(null);\n  var setScrollRef = React.useCallback(function (element) {\n    fillRef(ref, element);\n    fillRef(scrollRef, element);\n  }, []);\n  React.useEffect(function () {\n    var _scrollRef$current;\n    function onWheel(e) {\n      var _ref = e,\n        currentTarget = _ref.currentTarget,\n        deltaX = _ref.deltaX;\n      if (deltaX) {\n        onScroll({\n          currentTarget: currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    }\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.addEventListener('wheel', onWheel);\n    return function () {\n      var _scrollRef$current2;\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.removeEventListener('wheel', onWheel);\n    };\n  }, []);\n\n  // Check if all flattenColumns has width\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\n    return flattenColumns.every(function (column) {\n      return column.width >= 0;\n    });\n  }, [flattenColumns]);\n\n  // Add scrollbar column\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    scrollbar: true,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [combinationScrollBarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [combinationScrollBarSize, flattenColumns]);\n\n  // Calculate the sticky offsets\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n      left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]),\n      isSticky: isSticky\n    });\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _objectSpread({\n      overflow: 'hidden'\n    }, isSticky ? {\n      top: stickyTopOffset,\n      bottom: stickyBottomOffset\n    } : {}),\n    ref: setScrollRef,\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      tableLayout: 'fixed',\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\n    }\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), children(_objectSpread(_objectSpread({}, restProps), {}, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  }))));\n});\nFixedHolder.displayName = 'FixedHolder';\n\n/** Return a table in div as fixed element which contains sticky info */\n// export default responseImmutable(FixedHolder);\nexport default /*#__PURE__*/React.memo(FixedHolder);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}