{"ast":null,"code":"/**\n *  Each state-changing operation on Ethereum requires a transaction.\n *\n *  @_section api/transaction:Transactions  [about-transactions]\n */\nnull;\nexport { accessListify } from \"./accesslist.js\";\nexport { computeAddress, recoverAddress } from \"./address.js\";\nexport { Transaction } from \"./transaction.js\";","map":{"version":3,"names":["accessListify","computeAddress","recoverAddress","Transaction"],"sources":["/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/node_modules/ethers/src.ts/transaction/index.ts"],"sourcesContent":["/**\n *  Each state-changing operation on Ethereum requires a transaction.\n *\n *  @_section api/transaction:Transactions  [about-transactions]\n */\n\nnull;\n\n/**\n *  A single [[AccessList]] entry of storage keys (slots) for an address.\n */\nexport type AccessListEntry = { address: string, storageKeys: Array<string> };\n\n/**\n *  An ordered collection of [[AccessList]] entries.\n */\nexport type AccessList = Array<AccessListEntry>;\n\n/**\n *  Any ethers-supported access list structure.\n */\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\n\nexport { accessListify } from \"./accesslist.js\";\nexport { computeAddress, recoverAddress } from \"./address.js\";\nexport { Transaction } from \"./transaction.js\";\n\nexport type { TransactionLike } from \"./transaction.js\";\n"],"mappings":"AAAA;;;;;AAMA,IAAI;AAoBJ,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,cAAc,EAAEC,cAAc,QAAQ,cAAc;AAC7D,SAASC,WAAW,QAAQ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}