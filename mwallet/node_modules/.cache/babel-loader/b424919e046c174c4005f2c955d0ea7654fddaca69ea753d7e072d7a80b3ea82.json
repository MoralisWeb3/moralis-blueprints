{"ast":null,"code":"var _jsxFileName = \"/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/src/components/CreateAccount.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Card } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateAccount({\n  setWallet,\n  setSeedPhrase\n}) {\n  _s();\n  const [newSeedPhrase, setNewSeedPhrase] = useState(null);\n  const navigate = useNavigate();\n  function generateWallet() {\n    const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n    setNewSeedPhrase(mnemonic);\n  }\n  function setWalletAndMnemonic() {\n    setSeedPhrase(newSeedPhrase);\n    setWallet(ethers.Wallet.fromPhrase(newSeedPhrase).address);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mnemonic\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {\n          style: {\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Once you generate the seed phrase, save it securely in order to recover your wallet in the future\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"frontPageButton\",\n        type: \"primary\",\n        onClick: () => generateWallet(),\n        children: \"Generate Seed Phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"seedPhraseContainer\",\n        children: newSeedPhrase && /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: \"pre-wrap\"\n          },\n          children: newSeedPhrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"frontPageButton\",\n        type: \"default\"\n        // onClick={() => setWalletAndMnemonic()}\n        ,\n        children: \"Open Your New Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"frontPageBottom\",\n        onClick: () => navigate(\"/\"),\n        children: \"Back Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CreateAccount, \"MpYeApHUqdiOo3c1XDPQ9SjNV3w=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateAccount;\nexport default CreateAccount;\nvar _c;\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["React","Button","Card","ExclamationCircleOutlined","useNavigate","useState","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateAccount","setWallet","setSeedPhrase","_s","newSeedPhrase","setNewSeedPhrase","navigate","generateWallet","mnemonic","Wallet","createRandom","phrase","setWalletAndMnemonic","fromPhrase","address","children","className","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/src/components/CreateAccount.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Card } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction CreateAccount({ setWallet, setSeedPhrase }) {\n  const [newSeedPhrase, setNewSeedPhrase] = useState(null);\n  const navigate = useNavigate();\n\n  function generateWallet() {\n    const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n    setNewSeedPhrase(mnemonic);\n  }\n\n  function setWalletAndMnemonic() {\n    setSeedPhrase(newSeedPhrase);\n    setWallet(ethers.Wallet.fromPhrase(newSeedPhrase).address);\n  }\n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"mnemonic\">\n          <ExclamationCircleOutlined style={{ fontSize: \"20px\" }} />\n          <div>\n            Once you generate the seed phrase, save it securely in order to\n            recover your wallet in the future\n          </div>\n        </div>\n        <Button\n          className=\"frontPageButton\"\n          type=\"primary\"\n          onClick={() => generateWallet()}\n        >\n          Generate Seed Phrase\n        </Button>\n        <Card className=\"seedPhraseContainer\">\n          {newSeedPhrase && (\n            <pre style={{ whiteSpace: \"pre-wrap\" }}>{newSeedPhrase}</pre>\n          )}\n        </Card>\n        <Button\n          className=\"frontPageButton\"\n          type=\"default\"\n          // onClick={() => setWalletAndMnemonic()}\n        >\n          Open Your New Wallet\n        </Button>\n        <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\n          Back Home\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default CreateAccount;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}