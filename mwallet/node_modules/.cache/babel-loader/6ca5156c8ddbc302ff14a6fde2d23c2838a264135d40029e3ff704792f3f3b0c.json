{"ast":null,"code":"import { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genTreeStyle } from '../../tree/style';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = `.${treePrefixCls}`;\n  return [\n  // ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [`${componentCls}-dropdown`]: [{\n      padding: `${token.paddingXS}px ${token.paddingXS / 2}px`\n    },\n    // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          [`${treeCls}-treenode`]: {\n            [`${treeCls}-node-content-wrapper`]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    },\n    // ==================== Checkbox ====================\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token),\n    // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\n          [`${treeCls}-switcher-icon svg`]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\n// ============================== Export ==============================\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls) {\n  return genComponentStyleHook('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  })(prefixCls);\n}","map":{"version":3,"names":["getStyle","getCheckboxStyle","genComponentStyleHook","mergeToken","genTreeStyle","genBaseStyle","token","componentCls","treePrefixCls","colorBgElevated","treeCls","padding","paddingXS","colorBgContainer","borderRadius","alignItems","flex","direction","transform","useTreeSelectStyle","prefixCls","treeSelectToken"],"sources":["/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/node_modules/antd/es/tree-select/style/index.js"],"sourcesContent":["import { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genTreeStyle } from '../../tree/style';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = `.${treePrefixCls}`;\n  return [\n  // ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [`${componentCls}-dropdown`]: [{\n      padding: `${token.paddingXS}px ${token.paddingXS / 2}px`\n    },\n    // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          [`${treeCls}-treenode`]: {\n            [`${treeCls}-node-content-wrapper`]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    },\n    // ==================== Checkbox ====================\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token),\n    // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\n          [`${treeCls}-switcher-icon svg`]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\n// ============================== Export ==============================\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls) {\n  return genComponentStyleHook('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  })(prefixCls);\n}"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,gBAAgB,QAAQ,sBAAsB;AACnE,SAASC,qBAAqB,EAAEC,UAAU,QAAQ,sBAAsB;AACxE,SAASC,YAAY,QAAQ,kBAAkB;AAC/C;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAC5B,MAAM;IACJC,YAAY;IACZC,aAAa;IACbC;EACF,CAAC,GAAGH,KAAK;EACT,MAAMI,OAAO,GAAI,IAAGF,aAAc,EAAC;EACnC,OAAO;EACP;EACA;EACA;EACA;IACE,CAAE,GAAED,YAAa,WAAU,GAAG,CAAC;MAC7BI,OAAO,EAAG,GAAEL,KAAK,CAACM,SAAU,MAAKN,KAAK,CAACM,SAAS,GAAG,CAAE;IACvD,CAAC;IACD;IACAR,YAAY,CAACI,aAAa,EAAEL,UAAU,CAACG,KAAK,EAAE;MAC5CO,gBAAgB,EAAEJ;IACpB,CAAC,CAAC,CAAC,EAAE;MACH,CAACC,OAAO,GAAG;QACTI,YAAY,EAAE,CAAC;QACf,CAAE,GAAEJ,OAAQ,oBAAmB,GAAG;UAChCK,UAAU,EAAE,SAAS;UACrB,CAAE,GAAEL,OAAQ,WAAU,GAAG;YACvB,CAAE,GAAEA,OAAQ,uBAAsB,GAAG;cACnCM,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF,CAAC;IACD;IACAf,gBAAgB,CAAE,GAAEO,aAAc,WAAU,EAAEF,KAAK,CAAC;IACpD;IACA;MACE,OAAO,EAAE;QACPW,SAAS,EAAE,KAAK;QAChB,CAAE,GAAEP,OAAQ,YAAWA,OAAQ,iBAAgB,GAAG;UAChD,CAAE,GAAEA,OAAQ,oBAAmB,GAAG;YAChCQ,SAAS,EAAE;UACb;QACF;MACF;IACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AACD;AACA,eAAe,SAASC,kBAAkBA,CAACC,SAAS,EAAEZ,aAAa,EAAE;EACnE,OAAON,qBAAqB,CAAC,YAAY,EAAEI,KAAK,IAAI;IAClD,MAAMe,eAAe,GAAGlB,UAAU,CAACG,KAAK,EAAE;MACxCE;IACF,CAAC,CAAC;IACF,OAAO,CAACH,YAAY,CAACgB,eAAe,CAAC,CAAC;EACxC,CAAC,CAAC,CAACD,SAAS,CAAC;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}