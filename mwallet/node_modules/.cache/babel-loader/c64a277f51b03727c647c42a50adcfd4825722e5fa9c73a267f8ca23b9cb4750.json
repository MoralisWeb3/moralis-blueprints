{"ast":null,"code":"var _jsxFileName = \"/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/src/components/CreateAccount.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Card } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateAccount() {\n  _s();\n  const [newSeedPhrase, setNewSeedPhrase] = useState(null);\n  const navigate = useNavigate();\n  function generateWallet() {\n    const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n    console.log(mnemonic);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mnemonic\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {\n          style: {\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Once you generate the seed phrase, save it securely in order to recover your wallet in the future\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"frontPageButton\",\n        type: \"primary\"\n        // onClick={() => generateWallet()}\n        ,\n        children: \"Generate Seed Phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"seedPhraseContainer\",\n        children: newSeedPhrase && /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: \"pre-wrap\"\n          },\n          children: newSeedPhrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"frontPageButton\",\n        type: \"default\"\n        // onClick={() => setWalletAndMnemonic()}\n        ,\n        children: \"Open Your New Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"frontPageBottom\",\n        onClick: () => navigate(\"/\"),\n        children: \"Back Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CreateAccount, \"MpYeApHUqdiOo3c1XDPQ9SjNV3w=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateAccount;\nexport default CreateAccount;\nvar _c;\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["React","Button","Card","ExclamationCircleOutlined","useNavigate","useState","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateAccount","_s","newSeedPhrase","setNewSeedPhrase","navigate","generateWallet","mnemonic","Wallet","createRandom","phrase","console","log","children","className","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","type","whiteSpace","onClick","_c","$RefreshReg$"],"sources":["/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/src/components/CreateAccount.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Card } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction CreateAccount() {\n  const [newSeedPhrase, setNewSeedPhrase] = useState(null);\n  const navigate = useNavigate();\n\n  function generateWallet() {\n    const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n    console.log(mnemonic);\n  }\n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"mnemonic\">\n          <ExclamationCircleOutlined style={{ fontSize: \"20px\" }} />\n          <div>\n            Once you generate the seed phrase, save it securely in order to\n            recover your wallet in the future\n          </div>\n        </div>\n        <Button\n          className=\"frontPageButton\"\n          type=\"primary\"\n          // onClick={() => generateWallet()}\n        >\n          Generate Seed Phrase\n        </Button>\n        <Card className=\"seedPhraseContainer\">\n          {newSeedPhrase && (\n            <pre style={{ whiteSpace: \"pre-wrap\" }}>{newSeedPhrase}</pre>\n          )}\n        </Card>\n        <Button\n          className=\"frontPageButton\"\n          type=\"default\"\n          // onClick={() => setWalletAndMnemonic()}\n        >\n          Open Your New Wallet\n        </Button>\n        <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\n          Back Home\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default CreateAccount;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACnC,SAASC,yBAAyB,QAAQ,mBAAmB;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,SAASY,cAAcA,CAAA,EAAG;IACxB,MAAMC,QAAQ,GAAGX,MAAM,CAACY,MAAM,CAACC,YAAY,CAAC,CAAC,CAACF,QAAQ,CAACG,MAAM;IAC7DC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EACvB;EAEA,oBACET,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACtBf,OAAA;QAAKgB,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACvBf,OAAA,CAACL,yBAAyB;UAACsB,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAO;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1DtB,OAAA;UAAAe,QAAA,EAAK;QAGL;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNtB,OAAA,CAACP,MAAM;QACLuB,SAAS,EAAC,iBAAiB;QAC3BO,IAAI,EAAC;QACL;QAAA;QAAAR,QAAA,EACD;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtB,OAAA,CAACN,IAAI;QAACsB,SAAS,EAAC,qBAAqB;QAAAD,QAAA,EAClCV,aAAa,iBACZL,OAAA;UAAKiB,KAAK,EAAE;YAAEO,UAAU,EAAE;UAAW,CAAE;UAAAT,QAAA,EAAEV;QAAa;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAC7D;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACPtB,OAAA,CAACP,MAAM;QACLuB,SAAS,EAAC,iBAAiB;QAC3BO,IAAI,EAAC;QACL;QAAA;QAAAR,QAAA,EACD;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtB,OAAA;QAAGgB,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAAC,GAAG,CAAE;QAAAQ,QAAA,EAAC;MAE7D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACN,CAAC;AAEP;AAAClB,EAAA,CA5CQD,aAAa;EAAA,QAEHP,WAAW;AAAA;AAAA8B,EAAA,GAFrBvB,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}