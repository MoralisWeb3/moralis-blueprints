{"ast":null,"code":"/**\n *  There are many simple utilities required to interact with\n *  Ethereum and to simplify the library, without increasing\n *  the library dependencies for simple functions.\n *\n *  @_section api/utils:Utilities  [about-utils]\n */\nexport { decodeBase58, encodeBase58 } from \"./base58.js\";\nexport { decodeBase64, encodeBase64 } from \"./base64.js\";\nexport { getBytes, getBytesCopy, isHexString, isBytesLike, hexlify, concat, dataLength, dataSlice, stripZerosLeft, zeroPadValue, zeroPadBytes } from \"./data.js\";\nexport { isCallException, isError, assert, assertArgument, assertArgumentCount, assertPrivate, assertNormalize, makeError } from \"./errors.js\";\nexport { EventPayload } from \"./events.js\";\nexport { FetchRequest, FetchResponse, FetchCancelSignal } from \"./fetch.js\";\nexport { FixedNumber } from \"./fixednumber.js\";\nexport { fromTwos, toTwos, mask, getBigInt, getNumber, getUint, toBigInt, toNumber, toBeHex, toBeArray, toQuantity } from \"./maths.js\";\nexport { resolveProperties, defineProperties } from \"./properties.js\";\nexport { decodeRlp } from \"./rlp-decode.js\";\nexport { encodeRlp } from \"./rlp-encode.js\";\nexport { formatEther, parseEther, formatUnits, parseUnits } from \"./units.js\";\nexport { toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"./utf8.js\";\nexport { uuidV4 } from \"./uuid.js\";","map":{"version":3,"names":["decodeBase58","encodeBase58","decodeBase64","encodeBase64","getBytes","getBytesCopy","isHexString","isBytesLike","hexlify","concat","dataLength","dataSlice","stripZerosLeft","zeroPadValue","zeroPadBytes","isCallException","isError","assert","assertArgument","assertArgumentCount","assertPrivate","assertNormalize","makeError","EventPayload","FetchRequest","FetchResponse","FetchCancelSignal","FixedNumber","fromTwos","toTwos","mask","getBigInt","getNumber","getUint","toBigInt","toNumber","toBeHex","toBeArray","toQuantity","resolveProperties","defineProperties","decodeRlp","encodeRlp","formatEther","parseEther","formatUnits","parseUnits","toUtf8Bytes","toUtf8CodePoints","toUtf8String","Utf8ErrorFuncs","uuidV4"],"sources":["/Users/hamsterpapa/Desktop/ENS/Wallet-browser-extension/mwallet/node_modules/ethers/src.ts/utils/index.ts"],"sourcesContent":["/**\n *  There are many simple utilities required to interact with\n *  Ethereum and to simplify the library, without increasing\n *  the library dependencies for simple functions.\n *\n *  @_section api/utils:Utilities  [about-utils]\n */\n\nexport { decodeBase58, encodeBase58 } from \"./base58.js\";\n\nexport { decodeBase64, encodeBase64 } from \"./base64.js\";\n\nexport {\n    getBytes, getBytesCopy, isHexString, isBytesLike, hexlify, concat, dataLength, dataSlice,\n    stripZerosLeft, zeroPadValue, zeroPadBytes\n} from \"./data.js\";\n\nexport {\n    isCallException, isError,\n    assert, assertArgument, assertArgumentCount, assertPrivate, assertNormalize, makeError\n} from \"./errors.js\"\n\nexport { EventPayload } from \"./events.js\";\n\nexport {\n    FetchRequest, FetchResponse, FetchCancelSignal,\n} from \"./fetch.js\";\n\nexport { FixedNumber } from \"./fixednumber.js\"\n\nexport {\n    fromTwos, toTwos, mask,\n    getBigInt, getNumber, getUint, toBigInt, toNumber, toBeHex, toBeArray, toQuantity\n} from \"./maths.js\";\n\nexport { resolveProperties, defineProperties} from \"./properties.js\";\n\nexport { decodeRlp } from \"./rlp-decode.js\";\nexport { encodeRlp } from \"./rlp-encode.js\";\n\nexport { formatEther, parseEther, formatUnits, parseUnits } from \"./units.js\";\n\nexport {\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n\n    Utf8ErrorFuncs,\n} from \"./utf8.js\";\n\nexport { uuidV4 } from \"./uuid.js\";\n\n/////////////////////////////\n// Types\n\nexport type { BytesLike } from \"./data.js\";\n\nexport type {\n\n    //ErrorFetchRequestWithBody, ErrorFetchRequest,\n    //ErrorFetchResponseWithBody, ErrorFetchResponse,\n\n    ErrorCode,\n\n    EthersError, UnknownError, NotImplementedError, UnsupportedOperationError, NetworkError,\n    ServerError, TimeoutError, BadDataError, CancelledError, BufferOverrunError,\n    NumericFaultError, InvalidArgumentError, MissingArgumentError, UnexpectedArgumentError,\n    CallExceptionError, InsufficientFundsError, NonceExpiredError, OffchainFaultError,\n    ReplacementUnderpricedError, TransactionReplacedError, UnconfiguredNameError,\n    ActionRejectedError,\n\n    CallExceptionAction, CallExceptionTransaction,\n\n    CodedEthersError\n} from \"./errors.js\"\n\nexport type { EventEmitterable, Listener } from \"./events.js\";\n\nexport type {\n    GetUrlResponse,\n    FetchPreflightFunc, FetchProcessFunc, FetchRetryFunc,\n    FetchGatewayFunc, FetchGetUrlFunc\n} from \"./fetch.js\";\n\nexport type { FixedFormat } from \"./fixednumber.js\"\n\nexport type { BigNumberish, Numeric } from \"./maths.js\";\n\nexport type { RlpStructuredData } from \"./rlp.js\";\n\nexport type {\n    Utf8ErrorFunc,\n    UnicodeNormalizationForm,\n    Utf8ErrorReason\n} from \"./utf8.js\";\n"],"mappings":"AAAA;;;;;;;AAQA,SAASA,YAAY,EAAEC,YAAY,QAAQ,aAAa;AAExD,SAASC,YAAY,EAAEC,YAAY,QAAQ,aAAa;AAExD,SACIC,QAAQ,EAAEC,YAAY,EAAEC,WAAW,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EACxFC,cAAc,EAAEC,YAAY,EAAEC,YAAY,QACvC,WAAW;AAElB,SACIC,eAAe,EAAEC,OAAO,EACxBC,MAAM,EAAEC,cAAc,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,eAAe,EAAEC,SAAS,QACnF,aAAa;AAEpB,SAASC,YAAY,QAAQ,aAAa;AAE1C,SACIC,YAAY,EAAEC,aAAa,EAAEC,iBAAiB,QAC3C,YAAY;AAEnB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SACIC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EACtBC,SAAS,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAEC,UAAU,QAC9E,YAAY;AAEnB,SAASC,iBAAiB,EAAEC,gBAAgB,QAAO,iBAAiB;AAEpE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,SAASC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,QAAQ,YAAY;AAE7E,SACIC,WAAW,EACXC,gBAAgB,EAChBC,YAAY,EAEZC,cAAc,QACX,WAAW;AAElB,SAASC,MAAM,QAAQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}